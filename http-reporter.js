!function(e,o){"object"==typeof exports&&"object"==typeof module?module.exports=o():"function"==typeof define&&define.amd?define([],o):"object"==typeof exports?exports.httpReporter=o():e.httpReporter=o()}(this,(()=>(()=>{"use strict";var e={d:(o,t)=>{for(var r in t)e.o(t,r)&&!e.o(o,r)&&Object.defineProperty(o,r,{enumerable:!0,get:t[r]})},o:(e,o)=>Object.prototype.hasOwnProperty.call(e,o),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},o={};function t(){if("undefined"!=typeof window){if(window.addEventListener("error",(function(e){console.log("REPORTER: App error:",e)})),window.fetch){var e=window.fetch;window.fetch=function(){for(var o=arguments.length,t=new Array(o),r=0;r<o;r++)t[r]=arguments[r];return e.apply(this,t).then((function(e){return e.ok||console.log("REPORTER: Fetch error:",e),e})).catch((function(e){throw console.log("REPORTER: Fetch error:",e),e}))},console.log("Fetch listener added!!")}if(window.XMLHttpRequest){var o=window.XMLHttpRequest.prototype.open;window.XMLHttpRequest.prototype.open=function(){this.addEventListener("error",(function(e){console.log("REPORTER: XML Req error:",e)}));for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return o.apply(this,t)},console.log("XML listener added!")}console.log("All available listeners added")}else console.warn("Library only works on client environments. Make sure window is available.")}return e.r(o),e.d(o,{addListeners:()=>t}),t(),o})()));